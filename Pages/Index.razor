@page "/"

@using Smart.Blazor.Demos.Data
@using System.Linq;
@using System.Text.Json;
@inject RandomDataService RandomDataService
	<style>
		smart-gantt-chart {
			height: auto;
		}
			smart-gantt-chart .product-team {
				--smart-gantt-chart-task-color: rgb(94, 99, 181);
				--smart-gantt-chart-task-label-color: white;
				--smart-gantt-chart-task-label-color-selected: white;
			}
			smart-gantt-chart .marketing-team {
				--smart-gantt-chart-task-color: rgb(43, 195, 190);
			}
			smart-gantt-chart .dev-team {
				--smart-gantt-chart-task-color: rgb(242, 115, 112);
				--smart-gantt-chart-task-label-color: white;
				--smart-gantt-chart-task-label-color-selected: white;
			}
			smart-gantt-chart .design-team {
				--smart-gantt-chart-task-color: rgb(255, 197, 53);
			}
			smart-gantt-chart .qa-team {
				--smart-gantt-chart-task-color: rgb(99, 181, 144);
			}
			smart-gantt-chart .release-team {
				--smart-gantt-chart-task-color: rgb(188, 150, 223);
				--smart-gantt-chart-task-label-color: white;
			}
	</style>
	<GanttChart DataSource="Data" OnProgressChangeEnd="@ProgressChangedHandler"  TaskColumns="taskColumns" DurationUnit="Duration.Hour"></GanttChart>
@code {
	

    public void ProgressChangedHandler (Event EventObj) 
    {
        var details = EventObj["detail"];

        Console.WriteLine(details);

    }
	List<GanttChartTaskColumn> taskColumns = new List<GanttChartTaskColumn>{
		new GanttChartTaskColumn() {
			Label = "Tasks",
			Value = "label",
			Size = "60%"
		},
		new GanttChartTaskColumn() {
			Label = "Duration (hours)",
			Value = "duration"
		}
	};
	public GanttDataRecord[] Data;
	protected override async Task OnInitializedAsync()
	{
		Data = await RandomDataService.GetGanttDataAsync();
	}
}